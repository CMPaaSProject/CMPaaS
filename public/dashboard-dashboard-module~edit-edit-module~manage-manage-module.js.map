{"version":3,"sources":["webpack:///./src/app/_models/conceptmap.model.ts","webpack:///./src/app/_models/group.model.ts","webpack:///./src/app/_models/index.model.ts","webpack:///./src/app/_models/permission.model.ts","webpack:///./src/app/_models/user.model.ts","webpack:///./src/app/_models/version.model.ts","webpack:///./src/app/edit/conceptmap/save/savemap.component.css","webpack:///./src/app/edit/conceptmap/save/savemap.component.html","webpack:///./src/app/edit/conceptmap/save/savemap.component.ts","webpack:///./src/app/edit/edit.module.ts","webpack:///./src/app/edit/edit.routing.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module~edit-edit-module~manage-manage-module.js","sourcesContent":["import { User, Version, Permission } from './index.model';\r\nexport class ConceptMap {\r\n    _id: string;\r\n    title: string;\r\n    description?: string;\r\n    question?: string;\r\n    keywords?: string[];\r\n    created?: Date;\r\n    last_update?: Date;\r\n    author?: User;\r\n    versions?: Version[];\r\n    permissions?: {\r\n        publicPermission?: Permission,\r\n        groups?: any[],\r\n        users?: any[]\r\n    };\r\n}","import { User } from './index.model';\r\nexport class Group {\r\n    _id: string;\r\n    name: string;\r\n    description?: string;\r\n    created?: Date;\r\n    admin?: User;\r\n    isPublic?: Boolean;\r\n    users?: User[];\r\n}","export { User } from './user.model';\r\nexport { ConceptMap } from './conceptmap.model';\r\nexport { Group } from './group.model';\r\nexport { Result } from './result.model';\r\nexport { Version } from './version.model';\r\nexport { Permission } from './permission.model';","export class Permission {\r\n    public canView: boolean = true;\r\n    public canFork: boolean = true;\r\n    public canEdit: boolean = false\r\n}","import { Group, ConceptMap } from './index.model';\r\nexport class User {\r\n    _id: string;\r\n    firstname: string;\r\n    surname: string;\r\n    username: string;\r\n    password: string;\r\n    email: string;\r\n    link?: {\r\n        rel?: string,\r\n        href?: string\r\n    };\r\n    created?: Date;\r\n    token?:string;\r\n    facebook?: {\r\n        id?: string;\r\n        access_token?: string;\r\n    };\r\n    google?:{\r\n        id?: string;\r\n        access_token?: string;\r\n        id_token?: string\r\n    }\r\n    profile_picture?: string;\r\n    locInfo?: {\r\n        country?: string,\r\n        countryCode?: string,\r\n        region?: string,\r\n        regionName?: string,\r\n        city?: string\r\n    };\r\n    stats?: {\r\n        maps?:number,\r\n        groups?:number,\r\n        following?: number,\r\n        followers?: number\r\n    };\r\n    maps?: ConceptMap[];\r\n    last_maps?: ConceptMap[];\r\n    groups?: Group[];\r\n    following?: User[];\r\n    followers?: User[];\r\n    notifications?: [{\r\n        message: string,\r\n        readed: boolean\r\n    }];\r\n    description?:string;\r\n}","import { ConceptMap } from './index.model';\r\nexport class Version {\r\n    _id: string;\r\n    content: any;\r\n    created?: Date;\r\n    last_update?: Date;\r\n    link?: {\r\n        rel?: string,\r\n        href?: string\r\n    };\r\n    map?: ConceptMap;\r\n}","module.exports = \".main-content{\\r\\n    margin-top: 70px;\\r\\n    padding: 30px 15px;\\r\\n    min-height: calc(100vh - 123px);\\r\\n}\\r\\n.main-content .container-fluid{\\r\\n    width: 100%;\\r\\n    padding-right: 15px;\\r\\n    padding-left: 15px;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n}\\r\\n.header{\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n.header .title{\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n.img{\\r\\n    position: relative;\\r\\n    padding: 0;\\r\\n    width: 100%;\\r\\n    overflow: hidden;\\r\\n}\\r\\nth{\\r\\n    font-weight: 400;\\r\\n    font-size: 1em !important;\\r\\n}\\r\\n.td-name{\\r\\n    min-width: 100px;\\r\\n}\\r\\n.th-small{\\r\\n    max-width: 5px;\\r\\n}\"","module.exports = \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"header text-center\\\">\\r\\n            <h3 class=\\\"title\\\">Save Concept Map</h3>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header card-header-icon card-header-primary\\\">\\r\\n                            <div class=\\\"card-icon\\\">\\r\\n                                <i class=\\\"material-icons\\\">assignment</i>\\r\\n                            </div>\\r\\n                            <h4 class=\\\"card-title\\\">\\r\\n                                Required Meta-Informations\\r\\n                            </h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                <form method=\\\"#\\\" action=\\\"#\\\">\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                        <input matInput placeholder=\\\"Map Title\\\" [(ngModel)]='map.title' name=\\\"title\\\" type=\\\"text\\\">\\r\\n                                    </mat-form-field>\\r\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                            <input matInput placeholder=\\\"Question of investigation\\\" [(ngModel)]='map.question' name=\\\"question\\\" type=\\\"text\\\">\\r\\n                                        </mat-form-field>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"bmd-label-floating\\\">Description</label>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <textarea class=\\\"form-control\\\" placeholder=\\\"Talk about the content of this map.\\\" rows=\\\"3\\\" [(ngModel)]='map.description' name=\\\"description\\\"></textarea>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <label>Keywords</label>\\r\\n                                    <tag-input [(ngModel)]='map.keywords' secondaryPlaceholder=\\\"Enter keyword\\\" placeholder=\\\"+ Keyword\\\" theme='filled-theme' [ngModelOptions]=\\\"{standalone: true}\\\"></tag-input>                                        \\r\\n                                </form>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12 text-center\\\">\\r\\n                                    <button mat-raised-button class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">\\r\\n                                            <span class=\\\"btn-label\\\">\\r\\n                                                <i class=\\\"material-icons\\\">check</i>\\r\\n                                            </span>\\r\\n                                            Save\\r\\n                                    </button>\\r\\n                                    <button mat-raised-button class=\\\"btn btn-danger\\\" (click)=\\\"back()\\\">\\r\\n                                        <span class=\\\"btn-label\\\">\\r\\n                                            <i class=\\\"material-icons\\\">keyboard_arrow_left</i>\\r\\n                                        </span>\\r\\n                                        Back\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12 text-center\\\">\\r\\n                            <div class=\\\"img\\\" [innerHTML]=\\\"image\\\"> </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header card-header-icon card-header-info\\\">\\r\\n                                <div class=\\\"card-icon\\\">\\r\\n                                    <i class=\\\"material-icons\\\">share</i>\\r\\n                                </div>\\r\\n                                <h4 class=\\\"card-title\\\">\\r\\n                                    Share settings...\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div class=\\\"card-body\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <ul class=\\\"nav nav-pills nav-pills-info flex-column\\\" role=\\\"tablist\\\">\\r\\n                                        <li class=\\\"nav-item\\\">\\r\\n                                            <a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#link4\\\" role=\\\"tablist\\\">\\r\\n                                            Public\\r\\n                                            </a>\\r\\n                                        </li>\\r\\n                                        <li class=\\\"nav-item\\\">\\r\\n                                            <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#link5\\\" role=\\\"tablist\\\">\\r\\n                                            Group\\r\\n                                            </a>\\r\\n                                        </li>\\r\\n                                        <li class=\\\"nav-item\\\">\\r\\n                                            <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#link6\\\" role=\\\"tablist\\\">\\r\\n                                            Users\\r\\n                                            </a>\\r\\n                                        </li>\\r\\n                                        </ul>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-9\\\">\\r\\n                                        <div class=\\\"tab-content\\\">\\r\\n                                        <div class=\\\"tab-pane active\\\" id=\\\"link4\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-md-4\\\">\\r\\n                                                    Can view\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-md-4\\\">\\r\\n                                                    Can fork\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-md-4\\\">\\r\\n                                                    Can edit\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-md-4\\\">\\r\\n                                                    <div class=\\\"togglebutton\\\">    \\r\\n                                                        <label>\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"map.permissions.publicPermission.canView\\\" (change)=\\\"click('canView')\\\">\\r\\n                                                            <span class=\\\"toggle\\\"></span>\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-md-4\\\">\\r\\n                                                    <div class=\\\"togglebutton\\\">    \\r\\n                                                        <label>\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"map.permissions.publicPermission.canFork\\\" (change)=\\\"click('canFork')\\\">\\r\\n                                                            <span class=\\\"toggle\\\"></span>\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-md-4\\\">\\r\\n                                                    <div class=\\\"togglebutton\\\">    \\r\\n                                                        <label>\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"map.permissions.publicPermission.canEdit\\\" (change)=\\\"click('canEdit')\\\">\\r\\n                                                            <span class=\\\"toggle\\\"></span>\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-md-12\\\">\\r\\n                                                    <br />\\r\\n                                                    <h6>Permissions Description: </h6>\\r\\n                                                    <p *ngIf=\\\"!map.permissions.publicPermission.canView\\\">This map is completely private.</p>\\r\\n                                                    <p *ngIf=\\\"map.permissions.publicPermission.canView && !map.permissions.publicPermission.canFork && !map.permissions.publicPermission.canEdit\\\">Everyone can only view this map and its versions.</p>\\r\\n                                                    <p *ngIf=\\\"map.permissions.publicPermission.canFork && !map.permissions.publicPermission.canEdit\\\">Everyone can view this map and its versions and create/copy versions of this map.</p>\\r\\n                                                    <p *ngIf=\\\"map.permissions.publicPermission.canEdit\\\">Everyone has full access to this map and its versions.</p>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            \\r\\n                                        </div>\\r\\n                                        <div class=\\\"tab-pane\\\" id=\\\"link5\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-md-12\\\">\\r\\n                                                    <div class=\\\"input-group no-border\\\">\\r\\n                                                        <input type=\\\"text\\\" [(ngModel)]=\\\"search\\\" class=\\\"form-control\\\" placeholder=\\\"Group name...\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                        <button mat-raised-button (click)=\\\"findAndAddGroup($event)\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n                                                            <i class=\\\"material-icons\\\">playlist_add</i>\\r\\n                                                            <div class=\\\"ripple-container\\\"></div>\\r\\n                                                        </button>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"table-responsive\\\" *ngIf=\\\"map.permissions.groups.length > 0\\\">\\r\\n                                                        <table class=\\\"table\\\">\\r\\n                                                            <thead>\\r\\n                                                                <tr>\\r\\n                                                                    <th class=\\\"text-center th-small\\\">#</th>\\r\\n                                                                    <th class=\\\"text-center\\\">Group Name</th>\\r\\n                                                                    <th class=\\\"text-center\\\">View</th>\\r\\n                                                                    <th class=\\\"text-center\\\">Fork</th>\\r\\n                                                                    <th class=\\\"text-center\\\">Edit</th>\\r\\n                                                                </tr>\\r\\n                                                            </thead>\\r\\n                                                            <tbody>\\r\\n                                                                <tr *ngFor=\\\"let row of map.permissions.groups; let i = index\\\">\\r\\n                                                                    <td class=\\\"td-actions th-small\\\">\\r\\n                                                                        <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-danger btn-link\\\" (click)=\\\"removeGroup(i)\\\">\\r\\n                                                                            <i class=\\\"material-icons\\\">close</i>\\r\\n                                                                        </button>\\r\\n                                                                    </td>\\r\\n                                                                    <td class=\\\"text-center td-name\\\">{{row.group.name}}</td>\\r\\n                                                                    <td class=\\\"text-center\\\">\\r\\n                                                                        <div class=\\\"togglebutton\\\">  \\r\\n                                                                            <label>\\r\\n                                                                                <input type=\\\"checkbox\\\" [checked]=\\\"row.permission.canView\\\" (change)=\\\"click('canView', 'groups', i)\\\">\\r\\n                                                                                <span class=\\\"toggle\\\"></span>\\r\\n                                                                            </label>\\r\\n                                                                        </div>\\r\\n                                                                    </td>\\r\\n                                                                    <td class=\\\"text-center\\\">\\r\\n                                                                        <div class=\\\"togglebutton\\\">  \\r\\n                                                                            <label>\\r\\n                                                                                <input type=\\\"checkbox\\\" [checked]=\\\"row.permission.canFork\\\" (change)=\\\"click('canFork', 'groups', i)\\\">\\r\\n                                                                                <span class=\\\"toggle\\\"></span>\\r\\n                                                                            </label>\\r\\n                                                                        </div>\\r\\n                                                                    </td>\\r\\n                                                                    <td class=\\\"text-center\\\">\\r\\n                                                                        <div class=\\\"togglebutton\\\">  \\r\\n                                                                            <label>\\r\\n                                                                                <input type=\\\"checkbox\\\" [checked]=\\\"row.permission.canEdit\\\" (change)=\\\"click('canEdit', 'groups', i)\\\">\\r\\n                                                                                <span class=\\\"toggle\\\"></span>\\r\\n                                                                            </label>\\r\\n                                                                        </div>\\r\\n                                                                    </td>\\r\\n                                                                </tr>\\r\\n                                                            </tbody>\\r\\n                                                        </table>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"tab-pane\\\" id=\\\"link6\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col-md-12\\\">\\r\\n                                                    <div class=\\\"input-group no-border\\\">\\r\\n                                                        <input type=\\\"text\\\" [(ngModel)]=\\\"search\\\" class=\\\"form-control\\\" placeholder=\\\"Username...\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                        <button mat-raised-button (click)=\\\"findAndAddUser($event)\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n                                                            <i class=\\\"material-icons\\\">playlist_add</i>\\r\\n                                                            <div class=\\\"ripple-container\\\"></div>\\r\\n                                                        </button>\\r\\n                                                    </div>\\r\\n                                                    <div class=\\\"table-responsive\\\" *ngIf=\\\"map.permissions.users.length > 0\\\">\\r\\n                                                        <table class=\\\"table\\\">\\r\\n                                                            <thead>\\r\\n                                                                <tr>\\r\\n                                                                    <th class=\\\"text-center th-small\\\">#</th>\\r\\n                                                                    <th class=\\\"text-center\\\">Username</th>\\r\\n                                                                    <th class=\\\"text-center\\\">View</th>\\r\\n                                                                    <th class=\\\"text-center\\\">Fork</th>\\r\\n                                                                    <th class=\\\"text-center\\\">Edit</th>\\r\\n                                                                </tr>\\r\\n                                                            </thead>\\r\\n                                                            <tbody>\\r\\n                                                                <tr *ngFor=\\\"let row of map.permissions.users; let i = index\\\">\\r\\n                                                                    <td class=\\\"td-actions th-small\\\">\\r\\n                                                                        <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-danger btn-link\\\" (click)=\\\"removeUser(i)\\\">\\r\\n                                                                            <i class=\\\"material-icons\\\">close</i>\\r\\n                                                                        </button>\\r\\n                                                                    </td>\\r\\n                                                                    <td class=\\\"text-center td-name\\\">{{row.user.username}}</td>\\r\\n                                                                    <td class=\\\"text-center\\\">\\r\\n                                                                        <div class=\\\"togglebutton\\\">  \\r\\n                                                                            <label>\\r\\n                                                                                <input type=\\\"checkbox\\\" [checked]=\\\"row.permission.canView\\\" (change)=\\\"click('canView', 'users', i)\\\">\\r\\n                                                                                <span class=\\\"toggle\\\"></span>\\r\\n                                                                            </label>\\r\\n                                                                        </div>\\r\\n                                                                    </td>\\r\\n                                                                    <td class=\\\"text-center\\\">\\r\\n                                                                        <div class=\\\"togglebutton\\\">  \\r\\n                                                                            <label>\\r\\n                                                                                <input type=\\\"checkbox\\\" [checked]=\\\"row.permission.canFork\\\" (change)=\\\"click('canFork', 'users', i)\\\">\\r\\n                                                                                <span class=\\\"toggle\\\"></span>\\r\\n                                                                            </label>\\r\\n                                                                        </div>\\r\\n                                                                    </td>\\r\\n                                                                    <td class=\\\"text-center\\\">\\r\\n                                                                        <div class=\\\"togglebutton\\\">  \\r\\n                                                                            <label>\\r\\n                                                                                <input type=\\\"checkbox\\\" [checked]=\\\"row.permission.canEdit\\\" (change)=\\\"click('canEdit', 'users', i)\\\">\\r\\n                                                                                <span class=\\\"toggle\\\"></span>\\r\\n                                                                            </label>\\r\\n                                                                        </div>\\r\\n                                                                    </td>\\r\\n                                                                </tr>\\r\\n                                                            </tbody>\\r\\n                                                        </table>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    \\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { myDiagram } from '../conceptmap.component';\r\nimport * as go from 'gojs';\r\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\r\nimport { MapService, AuthService } from '../../../_services/index.service';\r\nimport swal from 'sweetalert2';\r\nimport { ConceptMap, Permission, Group, User } from '../../../_models/index.model';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'app-savemap-cmp',\r\n    templateUrl: './savemap.component.html',\r\n    styleUrls: ['./savemap.component.css']\r\n})\r\nexport class SaveMapComponent implements OnInit{\r\n    private image:SafeHtml;\r\n    public map:ConceptMap;\r\n    private search: string;\r\n    private user:User;\r\n\r\n    constructor(\r\n        private _sanitizer: DomSanitizer, \r\n        private mapService: MapService, \r\n        private router: Router,\r\n        private authService: AuthService\r\n    ){\r\n        this.map = new ConceptMap();\r\n        this.map.keywords = [];\r\n        this.map.permissions = {\r\n            publicPermission: new Permission(),\r\n            groups: [],\r\n            users: []\r\n        }\r\n        this.user = JSON.parse(this.authService.getCurrentUser());\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if(!!myDiagram) {\r\n            let serializer = new XMLSerializer();\r\n            let svg = myDiagram.makeSvg({\r\n                scale:0.6,\r\n                maxSize: new go.Size(NaN, 220)\r\n            });\r\n            this.image = this._sanitizer.bypassSecurityTrustHtml(serializer.serializeToString(svg));\r\n        }\r\n\r\n    }\r\n\r\n    save() {\r\n        let that = this;\r\n        this.map.keywords = this.map.keywords.map((el:any) => el.value);\r\n        this.mapService.create(this.map)\r\n            .subscribe(\r\n                data => {\r\n                    this.mapService.setCurrentMap(data.map);\r\n                    this.mapService.createVersion(myDiagram.model.toJson())\r\n                        .subscribe(_ => {\r\n                            swal({\r\n                                type: 'success',\r\n                                html: 'Greate! <strong>' +\r\n                                        'Your map was saved' +\r\n                                    '</strong>. <br /> You will be redirect to your dashboard!',\r\n                                confirmButtonClass: 'btn btn-success',\r\n                                buttonsStyling: false\r\n                            }).then(() => {\r\n                                that.authService.updateUser()\r\n                                    .subscribe(_ => {\r\n                                        that.router.navigate(['dashboard']);\r\n                                    }, error=> console.log(error));\r\n                            });\r\n                        }, error=> console.log(error));\r\n                }, \r\n                error => console.log(error));\r\n    }\r\n\r\n    back(){\r\n        this.router.navigate(['edit/cmap']);\r\n    }\r\n\r\n    click(bt, gu?, i?){\r\n        switch(bt){\r\n            case 'canView':\r\n                if(gu){\r\n                    this.map.permissions[gu][i].permission.canView = !this.map.permissions[gu][i].permission.canView;\r\n                    if(!this.map.permissions[gu][i].permission.canView){\r\n                        this.map.permissions[gu][i].permission.canFork = false;\r\n                        this.map.permissions[gu][i].permission.canEdit = false;\r\n                    }\r\n                }else{\r\n                    this.map.permissions.publicPermission.canView = !this.map.permissions.publicPermission.canView;\r\n                    if(!this.map.permissions.publicPermission.canView){\r\n                        this.map.permissions.publicPermission.canFork = false;\r\n                        this.map.permissions.publicPermission.canEdit = false;\r\n                    }\r\n                }\r\n                break;\r\n            case 'canFork':\r\n                if(gu){\r\n                    this.map.permissions[gu][i].permission.canFork = !this.map.permissions[gu][i].permission.canFork;\r\n                    if(this.map.permissions[gu][i].permission.canFork){\r\n                        this.map.permissions[gu][i].permission.canView = true;\r\n                    }else{\r\n                        this.map.permissions[gu][i].permission.canEdit = false;\r\n                    }\r\n                }else{\r\n                    this.map.permissions.publicPermission.canFork = !this.map.permissions.publicPermission.canFork;\r\n                    if(this.map.permissions.publicPermission.canFork){\r\n                        this.map.permissions.publicPermission.canView = true;\r\n                    }else{\r\n                        this.map.permissions.publicPermission.canEdit = false;\r\n                    }\r\n                }\r\n                break;\r\n            case 'canEdit':\r\n                if(gu){\r\n                    this.map.permissions[gu][i].permission.canEdit = !this.map.permissions[gu][i].permission.canEdit;\r\n                    if(this.map.permissions[gu][i].permission.canEdit){\r\n                        this.map.permissions[gu][i].permission.canView = true;\r\n                        this.map.permissions[gu][i].permission.canFork = true;\r\n                    }\r\n                }else{\r\n                    this.map.permissions.publicPermission.canEdit = !this.map.permissions.publicPermission.canEdit;\r\n                    if(this.map.permissions.publicPermission.canEdit){\r\n                        this.map.permissions.publicPermission.canView = true;\r\n                        this.map.permissions.publicPermission.canFork = true;\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    \r\n\r\n    findAndAddGroup(e){\r\n        e.preventDefault();\r\n        \r\n        let group = this.user.groups.find(g => g.name === this.search);\r\n        \r\n\r\n        // let g = new Group();\r\n        // g.name = this.search;\r\n        // let a = {\r\n        //     group: g,\r\n        //     permission: new Permission()\r\n        // }\r\n        // this.map.permissions.groups.push(a);\r\n    }\r\n    findAndAddUser(e){\r\n        e.preventDefault();\r\n        let u = new User();\r\n        u.username = this.search;\r\n        let a = {\r\n            user: u,\r\n            permission: new Permission()\r\n        }\r\n        this.map.permissions.users.push(a);\r\n    }\r\n\r\n    removeGroup(i){\r\n        this.map.permissions.groups.splice(i, 1);\r\n    }\r\n    removeUser(i){\r\n        this.map.permissions.users.splice(i, 1);\r\n    }\r\n    \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../app.module';\r\nimport { EditRoutes } from './edit.routing';\r\nimport { NouisliderModule } from 'ng2-nouislider';\r\nimport { TagInputModule } from 'ngx-chips';\r\nimport { ConceptMapComponent } from './conceptmap/conceptmap.component';\r\nimport { SaveMapComponent } from './conceptmap/save/savemap.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(EditRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NouisliderModule,\r\n    TagInputModule,\r\n    MaterialModule\r\n  ],\r\n  declarations: [\r\n    ConceptMapComponent,\r\n    SaveMapComponent\r\n  ],\r\n  exports:[ConceptMapComponent]\r\n})\r\n\r\nexport class EditModule {}\r\n","import { Routes } from '@angular/router';\r\nimport { ConceptMapComponent } from './conceptmap/conceptmap.component';\r\nimport { SaveMapComponent } from './conceptmap/save/savemap.component';\r\n\r\n\r\nexport const EditRoutes: Routes = [\r\n    {\r\n      path: '',\r\n      children: [ {\r\n            path: 'cmap',\r\n            children: [\r\n                {\r\n                    path: '',\r\n                    component: ConceptMapComponent\r\n                },{\r\n                    path: 'save',\r\n                    component: SaveMapComponent\r\n                }\r\n            ]\r\n        }\r\n       ]}\r\n];\r\n"],"sourceRoot":""}