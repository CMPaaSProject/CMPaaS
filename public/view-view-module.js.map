{"version":3,"sources":["webpack:///./src/app/view/map/versions/viewmapversions.component.css","webpack:///./src/app/view/map/versions/viewmapversions.component.html","webpack:///./src/app/view/map/versions/viewmapversions.component.ts","webpack:///./src/app/view/map/viewmap.component.css","webpack:///./src/app/view/map/viewmap.component.html","webpack:///./src/app/view/map/viewmap.component.ts","webpack:///./src/app/view/view.module.ts","webpack:///./src/app/view/view.routing.ts"],"names":[],"mappings":"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","file":"view-view-module.js","sourcesContent":["module.exports = \".btn{\\r\\n    box-shadow: 0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 10px -5px rgba(244, 67, 54, 0.4);\\r\\n}\\r\\n.mapimg{\\r\\n    overflow: hidden;\\r\\n}\\r\\n.mapimg2{\\r\\n    background-size: cover;\\r\\n    width: 100%;\\r\\n    border-radius: 6px;\\r\\n    pointer-events: none;\\r\\n    vertical-align: middle;\\r\\n    border-style: none;\\r\\n    height: 400px;\\r\\n    overflow: hidden;\\r\\n    -webkit-filter: brightness(97%);\\r\\n            filter: brightness(97%)\\r\\n}\\r\\n#map{\\r\\n    display: none;\\r\\n}\"","module.exports = \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"header text-center\\\">\\r\\n            <h3 class=\\\"title\\\">Versions Visualization</h3>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header card-header-tabs card-header-danger\\\">\\r\\n                          <div class=\\\"nav-tabs-navigation\\\">\\r\\n                            <div class=\\\"nav-tabs-wrapper\\\">\\r\\n                                <span class=\\\"nav-tabs-title\\\">Versions:</span>\\r\\n                              <ul class=\\\"nav nav-tabs\\\" data-tabs=\\\"tabs\\\">\\r\\n                                <li class=\\\"nav-item\\\">\\r\\n                                  <a class=\\\"nav-link active\\\" href=\\\"#list\\\" data-toggle=\\\"tab\\\">\\r\\n                                    <i class=\\\"material-icons\\\">view_list</i> List\\r\\n                                    <div class=\\\"ripple-container\\\"></div>\\r\\n                                  </a>\\r\\n                                </li>\\r\\n                                <li class=\\\"nav-item\\\">\\r\\n                                  <a class=\\\"nav-link\\\" href=\\\"#navigate\\\" data-toggle=\\\"tab\\\">\\r\\n                                    <i class=\\\"material-icons\\\">code</i> Navigate\\r\\n                                    <div class=\\\"ripple-container\\\"></div>\\r\\n                                  </a>\\r\\n                                </li>\\r\\n                                <li class=\\\"nav-item\\\">\\r\\n                                  <a class=\\\"nav-link\\\" href=\\\"#settings\\\" data-toggle=\\\"tab\\\">\\r\\n                                    <i class=\\\"material-icons\\\">cloud</i> Server\\r\\n                                    <div class=\\\"ripple-container\\\"></div>\\r\\n                                  </a>\\r\\n                                </li>\\r\\n                              </ul>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                          <div class=\\\"card-body\\\">\\r\\n                              <div class=\\\"tab-content\\\">\\r\\n                                  <div class=\\\"tab-pane active\\\" id=\\\"list\\\">\\r\\n                                      <table class=\\\"table\\\">\\r\\n                                            <thead>\\r\\n                                                    <tr>\\r\\n                                                      <th class=\\\"text-center\\\">Check</th>\\r\\n                                                      <th>Small Pic</th>\\r\\n                                                      <th>Last Update</th>\\r\\n                                                      <th>Options</th>\\r\\n                                                    </tr>\\r\\n                                                </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr *ngFor=\\\"let row of versionList; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n                                                        <td>\\r\\n                                                            <div [ngSwitch]=\\\"row.checked\\\">\\r\\n                                                                <div *ngSwitchCase=\\\"true\\\">\\r\\n                                                                    <div class=\\\"form-check\\\">\\r\\n                                                                    <label class=\\\"form-check-label\\\">\\r\\n                                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" checked>\\r\\n                                                                        <span class=\\\"form-check-sign\\\">\\r\\n                                                                        <span class=\\\"check\\\"></span>\\r\\n                                                                        </span>\\r\\n                                                                    </label>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n                                                                <div *ngSwitchDefault>\\r\\n                                                                    <div class=\\\"form-check\\\">\\r\\n                                                                    <label class=\\\"form-check-label\\\">\\r\\n                                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                                                        <span class=\\\"form-check-sign\\\">\\r\\n                                                                        <span class=\\\"check\\\"></span>\\r\\n                                                                        </span>\\r\\n                                                                    </label>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n            \\r\\n                                                            </div>\\r\\n                                                        </td>\\r\\n                                                    <td><div class=\\\"mapimg\\\" [innerHTML]=\\\"images[i]\\\"> </div></td>\\r\\n                                                    <td>{{row.last_update | date:'medium'}}</td>\\r\\n                                                    <td class=\\\"td-actions text-right\\\">\\r\\n                                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\" [matTooltipPosition]=\\\"'left'\\\" class=\\\"btn btn-primary btn-link btn-sm\\\" (click)=\\\"edit(i)\\\">\\r\\n                                                            <i class=\\\"material-icons\\\">edit</i>\\r\\n                                                        </button>\\r\\n      \\r\\n                                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'left'\\\" class=\\\"btn btn-danger btn-link btn-sm\\\">\\r\\n                                                            <i class=\\\"material-icons\\\">close</i>\\r\\n                                                        </button>\\r\\n                                                    </td>\\r\\n                                                 </tr>\\r\\n                                            </tbody>\\r\\n                                      </table>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"tab-pane\\\" id=\\\"navigate\\\">\\r\\n                                     <div class=\\\"row\\\">\\r\\n                                         <div class=\\\"col-md-12 text-center\\\">\\r\\n                                             <div class=\\\"mapimg2\\\" [innerHTML]=\\\"images2[count]\\\"> </div>\\r\\n                                         </div>\\r\\n                                     </div>\\r\\n                                     <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-12 text-center\\\">\\r\\n                                            <button mat-raised-button class=\\\"btn\\\">\\r\\n                                                <span class=\\\"btn-label\\\">\\r\\n                                                    <i class=\\\"material-icons\\\">keyboard_arrow_left</i>\\r\\n                                                </span>\\r\\n                                            </button>\\r\\n                                            <button mat-raised-button class=\\\"btn btn-success\\\">\\r\\n                                                <span class=\\\"btn-label\\\">\\r\\n                                                    <i class=\\\"material-icons\\\">edit</i>\\r\\n                                                </span>\\r\\n                                            </button>\\r\\n                                            <button mat-raised-button class=\\\"btn btn-danger\\\">\\r\\n                                                <span class=\\\"btn-label\\\">\\r\\n                                                    <i class=\\\"material-icons\\\">delete</i>\\r\\n                                                </span>\\r\\n                                            </button>\\r\\n                                            <button mat-raised-button class=\\\"btn btn\\\" (click)=\\\"next()\\\">\\r\\n                                                <span class=\\\"btn-label\\\">\\r\\n                                                    <i class=\\\"material-icons\\\">keyboard_arrow_right</i>\\r\\n                                                </span>\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                     </div>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"tab-pane\\\" id=\\\"settings\\\">\\r\\n                                      <table class=\\\"table\\\">\\r\\n                                            <tbody>\\r\\n                                                <tr *ngFor=\\\"let row of tasks3\\\">\\r\\n                                                    <td>\\r\\n                                                        <div [ngSwitch]=\\\"row.checked\\\">\\r\\n                                                            <div *ngSwitchCase=\\\"true\\\">\\r\\n                                                              <div class=\\\"form-check\\\">\\r\\n                                                                <label class=\\\"form-check-label\\\">\\r\\n                                                                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" checked>\\r\\n                                                                  <span class=\\\"form-check-sign\\\">\\r\\n                                                                    <span class=\\\"check\\\"></span>\\r\\n                                                                  </span>\\r\\n                                                                </label>\\r\\n                                                              </div>\\r\\n                                                            </div>\\r\\n                                                            <div *ngSwitchDefault>\\r\\n                                                              <div class=\\\"form-check\\\">\\r\\n                                                                <label class=\\\"form-check-label\\\">\\r\\n                                                                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                                                  <span class=\\\"form-check-sign\\\">\\r\\n                                                                    <span class=\\\"check\\\"></span>\\r\\n                                                                  </span>\\r\\n                                                                </label>\\r\\n                                                              </div>\\r\\n                                                            </div>\\r\\n      \\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td>{{row.title}}</td>\\r\\n                                                    <td class=\\\"td-actions text-right\\\">\\r\\n                                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\" [matTooltipPosition]=\\\"'above'\\\"class=\\\"btn btn-primary btn-link btn-sm\\\">\\r\\n                                                            <i class=\\\"material-icons\\\">edit</i>\\r\\n                                                        </button>\\r\\n                                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-primary btn-link btn-sm\\\">\\r\\n                                                            <i class=\\\"material-icons\\\">close</i>\\r\\n                                                        </button>\\r\\n                                                    </td>\\r\\n                                                 </tr>\\r\\n                                            </tbody>\\r\\n                                      </table>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"map\\\" #myDiagramDiv></div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { MapService, MeService, VersionService } from '../../../_services/index.service';\r\nimport { ConceptMap, Version } from '../../../_models/index.model';\r\nimport * as go from 'gojs';\r\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\nvar myDiagram: go.Diagram;\r\n\r\n\r\n@Component({\r\n    selector: 'app-view-map-versions-cmp',\r\n    templateUrl: './viewmapversions.component.html',\r\n    styleUrls: ['./viewmapversions.component.css']\r\n})\r\n\r\nexport class ViewMapVersionsComponent implements OnInit {\r\n    @ViewChild('myDiagramDiv')\r\n    element: ElementRef;\r\n\r\n    private count:number = 0;\r\n    private currentMap: ConceptMap;\r\n    public versionList: Version[];\r\n    private images:SafeHtml[] = new Array<SafeHtml>();\r\n    private images2:SafeHtml[] = new Array<SafeHtml>();\r\n    constructor(\r\n        private mapService:MapService, \r\n        private meService: MeService, \r\n        private _sanitizer: DomSanitizer, \r\n        private versionService:VersionService,\r\n        private router:Router\r\n    ){}\r\n\r\n    ngOnInit() {\r\n        let map:ConceptMap[] = new Array<ConceptMap>();\r\n        map.push(JSON.parse(this.mapService.getCurrentMap()));\r\n        this.meService.getMapsVersions(map)\r\n            .subscribe(versions => {\r\n                this.versionList = versions;\r\n                let serializer = new XMLSerializer();\r\n                let svg;\r\n                for(let i = 0; i < this.versionList.length; i++){\r\n                    myDiagram.model = go.Model.fromJson(this.versionList[i].content);\r\n                    svg = myDiagram.makeSvg({\r\n                        scale:0.5,\r\n                        maxSize: new go.Size(NaN, 220)\r\n                    });\r\n                    this.images[i] = this._sanitizer.bypassSecurityTrustHtml(serializer.serializeToString(svg));\r\n\r\n                    svg = myDiagram.makeSvg({\r\n                        scale:0.8,\r\n                        maxSize: new go.Size(NaN, 400)\r\n                    });\r\n                    this.images2[i] = this._sanitizer.bypassSecurityTrustHtml(serializer.serializeToString(svg));\r\n                }\r\n            }, error => console.log(error));\r\n        \r\n\r\n\r\n        //POG AQUI TBM\r\n        let conceptNodeTemplate, relationNodeTemplate, normalLinkTemplate, orLinkTemplate, mapTemplate;\r\n        const $$ = go.GraphObject.make;\r\n\r\n        myDiagram = \r\n            $$(go.Diagram, this.element.nativeElement,{\r\n                initialContentAlignment: go.Spot.Center, // center the content\r\n            });\r\n\r\n            conceptNodeTemplate = \r\n                $$(go.Node, \"Auto\",  // the Shape will go around the TextBlock\r\n                    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n                    $$(go.Shape, \"Rectangle\", \r\n                    {\r\n                        portId: \"\", \r\n                        strokeWidth: 1,\r\n                        fromLinkable: true, \r\n                        fromLinkableSelfNode: true, \r\n                        fromLinkableDuplicates: true,\r\n                        toLinkable: true, \r\n                        toLinkableSelfNode: true, \r\n                        toLinkableDuplicates: true,\r\n                        cursor: \"pointer\",\r\n                        fill: $$(go.Brush, \"Linear\", {0: \"rgb(254, 201, 0)\", 1:\"rgb(254, 162, 0)\"}),\r\n                        stroke: \"black\"\r\n                    },\r\n                        // Shape.fill is bound to Node.data.color\r\n                        new go.Binding(\"fill\", \"color\")\r\n                    ),\r\n                    $$(go.TextBlock,\r\n                        {\r\n                            font: \"bold 12px sans-serif\",\r\n                            stroke: '#333',\r\n                            margin: 6,  // make some extra space for the shape around the text\r\n                            isMultiline: true,  // don't allow newlines in text\r\n                            editable: true  // allow in-place editing by user\r\n                        },  // some room around the text\r\n                        // TextBlock.text is bound to Node.data.key\r\n                        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n                    )\r\n            );\r\n\r\n            relationNodeTemplate = \r\n                $$(go.Node, \"Auto\",  // the Shape will go around the TextBlock\r\n                    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n                    $$(go.Shape, \"Rectangle\", \r\n                    {\r\n                        portId: \"\", \r\n                        strokeWidth: 1,\r\n                        fromLinkable: true, \r\n                        fromLinkableSelfNode: true, \r\n                        fromLinkableDuplicates: true,\r\n                        toLinkable: true, \r\n                        toLinkableSelfNode: true, \r\n                        toLinkableDuplicates: true,\r\n                        cursor: \"pointer\",\r\n                        fill: \"rgba(255,255,255,0)\",\r\n                        stroke: \"rgba(255,255,255,0)\"\r\n                    }),\r\n                    $$(go.TextBlock,\r\n                        {\r\n                            font: \"bold 12px sans-serif\",\r\n                            stroke: '#333',\r\n                            margin: 6,  // make some extra space for the shape around the text\r\n                            isMultiline: true,  // don't allow newlines in text\r\n                            editable: true\r\n                        },  // some room around the text\r\n                        // TextBlock.text is bound to Node.data.key\r\n                        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n                    )\r\n            );\r\n\r\n            normalLinkTemplate = \r\n                $$(go.Link,\r\n                    { \r\n                        toShortLength: 3, \r\n                        relinkableFrom: true, \r\n                        relinkableTo: true,\r\n                        curve: go.Link.Bezier,\r\n                        reshapable: true\r\n                    },  // allow the user to relink existing links\r\n                    new go.Binding(\"points\").makeTwoWay(),\r\n                    $$(go.Shape,\r\n                        {\r\n                            strokeWidth: 1 \r\n                        },\r\n                        new go.Binding(\"stroke\", \"color\").makeTwoWay()\r\n                    ),\r\n                    $$(go.Shape,\r\n                        { \r\n                            toArrow: \"Standard\",\r\n                            stroke: null\r\n                        },\r\n                        new go.Binding(\"stroke\", \"color\").makeTwoWay(),\r\n                        new go.Binding(\"fill\", \"color\").makeTwoWay(),\r\n                )\r\n            );\r\n\r\n            orLinkTemplate = \r\n                $$(go.Link,\r\n                    { \r\n                        toShortLength: 3, \r\n                        relinkableFrom: true, \r\n                        relinkableTo: true,\r\n                        curve: go.Link.Bezier,\r\n                        reshapable: true\r\n                    },  // allow the user to relink existing links\r\n                    new go.Binding(\"points\").makeTwoWay(),\r\n                    $$(go.Shape,\r\n                        {\r\n                            strokeWidth: 1 \r\n                        },\r\n                        new go.Binding(\"stroke\", \"color\").makeTwoWay()\r\n                    ),\r\n                    $$(go.Shape,\r\n                        {\r\n                            toArrow: \"Standard\",\r\n                            stroke: null\r\n                        },\r\n                        new go.Binding(\"fill\", \"color\").makeTwoWay()\r\n                    ),\r\n                    $$(go.Shape,\r\n                        {\r\n                            strokeWidth: 1, \r\n                            fromArrow: \"BackwardSemiCircle\" \r\n                        },\r\n                        new go.Binding(\"fill\", \"color\").makeTwoWay()\r\n                    )\r\n                );\r\n\r\n            mapTemplate =\r\n                $$(go.Group, \"Auto\",{},\r\n                    new go.Binding(\"isSubGraphExpanded\", \"expanded\").makeTwoWay(),\r\n                    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n                    $$(go.Shape, \"RoundedRectangle\",\r\n                        {\r\n                            strokeWidth: 1,\r\n                            portId: \"\", \r\n                            cursor: \"pointer\",\r\n                            fromLinkable: true, \r\n                            fromLinkableSelfNode: true, \r\n                            fromLinkableDuplicates: true,\r\n                            toLinkable: true, \r\n                            toLinkableSelfNode: true, \r\n                            toLinkableDuplicates: true \r\n                        },\r\n                        new go.Binding(\"fill\", \"isHighlighted\", function(h) { return h ? \"rgba(255,0,0,0.2)\" : $$(go.Brush, \"Linear\", { 0: \"rgba(224,234,252,0.5)\", 1: \"rgba(207,222,243,0.5)\" }); }).ofObject(),\r\n                    ),\r\n                    $$(go.Panel, \"Vertical\",\r\n                        { \r\n                            defaultAlignment: go.Spot.Center, \r\n                            margin: 6 \r\n                        },\r\n                        $$(go.Panel, \"Horizontal\",\r\n                            { \r\n                                defaultAlignment: go.Spot.Top\r\n                            },\r\n                            $$(\"SubGraphExpanderButton\"), // the SubGraphExpanderButton is a panel that functions as a button to expand or collapse the subGraph\r\n                            $$(go.TextBlock,\r\n                                {\r\n                                    font: \"bold 12px sans-serif\",\r\n                                    stroke: '#333',\r\n                                    margin: 4,  // make some extra space for the shape around the text\r\n                                    isMultiline: true,  // don't allow newlines in text\r\n                                    editable: true, \r\n                                    alignment: go.Spot.Center\r\n                                },\r\n                                new go.Binding(\"text\", \"text\").makeTwoWay())\r\n                        ),\r\n                        $$(go.Placeholder, // create a placeholder to represent the area where the contents of the group are\r\n                            { \r\n                                padding: new go.Margin(0, 5) \r\n                            }\r\n                        )\r\n                    )\r\n            );\r\n\r\n            myDiagram.nodeTemplateMap.add(\"concept\", conceptNodeTemplate);\r\n            myDiagram.nodeTemplateMap.add(\"relation\", relationNodeTemplate);\r\n            \r\n            myDiagram.linkTemplateMap.add(\"normal\", normalLinkTemplate);\r\n            myDiagram.linkTemplateMap.add(\"or\", orLinkTemplate);\r\n            \r\n            myDiagram.groupTemplateMap.add(\"map\", mapTemplate);\r\n    }\r\n\r\n    edit(n) {\r\n        this.versionService.setCurrentLoadVersion(this.versionList[n]);\r\n        this.router.navigate(['edit', 'cmap']);\r\n    }\r\n    next() {\r\n        this.count++;\r\n        this.count >= this.images2.length ? this.count = 0 : {} ;\r\n        console.log(this.count);\r\n    }\r\n}\r\n","module.exports = \"#map{\\r\\n    display: none;\\r\\n}\\r\\n.img {\\r\\n    overflow: hidden;\\r\\n}\\r\\n.col-md-0 {\\r\\n    display: none;\\r\\n}\\r\\n.row div{\\r\\n    transition: all 0.5s;\\r\\n}\"","module.exports = \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"header text-center\\\">\\r\\n            <h3 class=\\\"title\\\">Concept Map Visualization</h3>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\" id=\\\"metaInfo\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-icon card-header-primary\\\">\\r\\n                        <div class=\\\"card-icon\\\">\\r\\n                            <i class=\\\"material-icons\\\">assignment</i>\\r\\n                        </div>\\r\\n                        <h4 class=\\\"card-title\\\">\\r\\n                            Meta-Informations\\r\\n                            <div class=\\\"col-md-3 ml-auto text-right\\\">\\r\\n                                <button mat-raised-button mat-min-fab class=\\\"btn btn-primary btn-round btn-fab\\\" (click)=\\\"expand()\\\">\\r\\n                                    <i class=\\\"material-icons\\\">favorite</i>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                            <form method=\\\"#\\\" action=\\\"#\\\">\\r\\n                                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                    <input matInput placeholder=\\\"Map Title\\\" [(ngModel)]='currentMap.title' name=\\\"title\\\" type=\\\"text\\\">\\r\\n                                </mat-form-field>\\r\\n                                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                        <input matInput placeholder=\\\"Question of investigation\\\" [(ngModel)]='currentMap.question' name=\\\"question\\\" type=\\\"text\\\">\\r\\n                                    </mat-form-field>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label>Description</label>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"bmd-label-floating\\\"> Talk about the content of this map.</label>\\r\\n                                        <textarea class=\\\"form-control\\\" rows=\\\"3\\\" [(ngModel)]='currentMap.description' name=\\\"description\\\"></textarea>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <label>Keywords</label>\\r\\n                                <tag-input [(ngModel)]='currentMap.keywords' secondaryPlaceholder=\\\"Enter keyword\\\" placeholder=\\\"+ Keyword\\\" theme='filled-theme' [ngModelOptions]=\\\"{standalone: true}\\\"></tag-input>\\r\\n                            </form>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-12 text-center\\\">\\r\\n                                <button mat-raised-button class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">\\r\\n                                        <span class=\\\"btn-label\\\">\\r\\n                                            <i class=\\\"material-icons\\\">update</i>\\r\\n                                        </span>\\r\\n                                        Update\\r\\n                                </button>\\r\\n                                <button mat-raised-button class=\\\"btn btn-danger\\\" (click)=\\\"back()\\\">\\r\\n                                    <span class=\\\"btn-label\\\">\\r\\n                                        <i class=\\\"material-icons\\\">delete</i>\\r\\n                                    </span>\\r\\n                                    Delete\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-0\\\" id=\\\"otherInfo\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header card-header-icon card-header-success\\\">\\r\\n                            <div class=\\\"card-icon\\\">\\r\\n                                <i class=\\\"material-icons\\\">image</i>\\r\\n                            </div>\\r\\n                            <h4 class=\\\"card-title\\\">\\r\\n                                Versions Preview\\r\\n                            </h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12 text-center\\\">\\r\\n                                    <div class=\\\"img\\\" [innerHTML]=\\\"images[count]\\\"> </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12 text-center\\\">\\r\\n                                    <button mat-raised-button mat-min-fab class=\\\"btn btn-success btn-round btn-fab btn-sm\\\" (click)=\\\"previus()\\\">\\r\\n                                        <i class=\\\"material-icons\\\">chevron_left</i>\\r\\n                                    </button>\\r\\n                                    <a routerLink=\\\"./versions\\\" mat-raised-button mat-min-fab class=\\\"btn btn-warning btn-round btn-fab btn-sm\\\" title=\\\"View history\\\">\\r\\n                                        <i class=\\\"material-icons\\\">history</i>\\r\\n                                    </a>\\r\\n                                    <button mat-raised-button mat-min-fab class=\\\"btn btn-success btn-round btn-fab btn-sm\\\" (click)=\\\"next()\\\">\\r\\n                                        <i class=\\\"material-icons\\\">chevron_right</i>\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                                \\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>    \\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header card-header-icon card-header-info\\\">\\r\\n                            <div class=\\\"card-icon\\\">\\r\\n                                <i class=\\\"material-icons\\\">share</i>\\r\\n                            </div>\\r\\n                            <h4 class=\\\"card-title\\\">\\r\\n                                Share with...\\r\\n                            </h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            \\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n        </div>\\r\\n        </div>\\r\\n        <!-- <app-comments-areas></app-comments-areas>  -->\\r\\n    </div>\\r\\n</div>\\r\\n   \\r\\n\\r\\n<div id=\\\"map\\\" #myDiagramDiv></div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { MapService, MeService, VersionService } from '../../_services/index.service';\r\nimport { ConceptMap, Version } from '../../_models/index.model';\r\nimport * as go from 'gojs';\r\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare const $:any;\r\n\r\nvar myDiagram: go.Diagram;\r\n\r\n\r\n@Component({\r\n    selector: 'app-view-map-cmp',\r\n    templateUrl: 'viewmap.component.html',\r\n    styleUrls: ['./viewmap.component.css']\r\n})\r\n\r\nexport class ViewMapComponent implements OnInit {\r\n    @ViewChild('myDiagramDiv')\r\n    element: ElementRef;\r\n\r\n    private expanded:boolean = false;\r\n    private count:number = 0;\r\n    private currentMap: ConceptMap;\r\n    public versionList: Version[];\r\n    private images:SafeHtml[] = new Array<SafeHtml>();\r\n    private images2:SafeHtml[] = new Array<SafeHtml>();\r\n    constructor(\r\n        private mapService:MapService, \r\n        private meService: MeService, \r\n        private _sanitizer: DomSanitizer, \r\n        private versionService:VersionService,\r\n        private router:Router\r\n    ){}\r\n\r\n    ngOnInit() {\r\n        let map:ConceptMap[] = new Array<ConceptMap>();\r\n        map.push(this.currentMap = JSON.parse(this.mapService.getCurrentMap()));\r\n        console.log(this.currentMap);\r\n        this.meService.getMapsVersions(map)\r\n            .subscribe(versions => {\r\n                this.versionList = versions;\r\n                let serializer = new XMLSerializer();\r\n                let svg;\r\n                for(let i = 0; i < this.versionList.length; i++){\r\n                    myDiagram.model = go.Model.fromJson(this.versionList[i].content);\r\n                    svg = myDiagram.makeSvg({\r\n                        scale:0.5,\r\n                        maxSize: new go.Size(NaN, 220)\r\n                    });\r\n                    this.images[i] = this._sanitizer.bypassSecurityTrustHtml(serializer.serializeToString(svg));\r\n\r\n                    svg = myDiagram.makeSvg({\r\n                        scale:1,\r\n                        maxSize: new go.Size(NaN, 440)\r\n                    });\r\n                    this.images2[i] = this._sanitizer.bypassSecurityTrustHtml(serializer.serializeToString(svg));\r\n                }\r\n            }, error => console.log(error));\r\n        \r\n\r\n\r\n        //POG AQUI TBM\r\n        let conceptNodeTemplate, relationNodeTemplate, normalLinkTemplate, orLinkTemplate, mapTemplate;\r\n        const $$ = go.GraphObject.make;\r\n\r\n        myDiagram = \r\n            $$(go.Diagram, this.element.nativeElement,{\r\n                initialContentAlignment: go.Spot.Center, // center the content\r\n            });\r\n\r\n            conceptNodeTemplate = \r\n                $$(go.Node, \"Auto\",  // the Shape will go around the TextBlock\r\n                    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n                    $$(go.Shape, \"Rectangle\", \r\n                    {\r\n                        portId: \"\", \r\n                        strokeWidth: 1,\r\n                        fromLinkable: true, \r\n                        fromLinkableSelfNode: true, \r\n                        fromLinkableDuplicates: true,\r\n                        toLinkable: true, \r\n                        toLinkableSelfNode: true, \r\n                        toLinkableDuplicates: true,\r\n                        cursor: \"pointer\",\r\n                        fill: $$(go.Brush, \"Linear\", {0: \"rgb(254, 201, 0)\", 1:\"rgb(254, 162, 0)\"}),\r\n                        stroke: \"black\"\r\n                    },\r\n                        // Shape.fill is bound to Node.data.color\r\n                        new go.Binding(\"fill\", \"color\")\r\n                    ),\r\n                    $$(go.TextBlock,\r\n                        {\r\n                            font: \"bold 12px sans-serif\",\r\n                            stroke: '#333',\r\n                            margin: 6,  // make some extra space for the shape around the text\r\n                            isMultiline: true,  // don't allow newlines in text\r\n                            editable: true  // allow in-place editing by user\r\n                        },  // some room around the text\r\n                        // TextBlock.text is bound to Node.data.key\r\n                        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n                    )\r\n            );\r\n\r\n            relationNodeTemplate = \r\n                $$(go.Node, \"Auto\",  // the Shape will go around the TextBlock\r\n                    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n                    $$(go.Shape, \"Rectangle\", \r\n                    {\r\n                        portId: \"\", \r\n                        strokeWidth: 1,\r\n                        fromLinkable: true, \r\n                        fromLinkableSelfNode: true, \r\n                        fromLinkableDuplicates: true,\r\n                        toLinkable: true, \r\n                        toLinkableSelfNode: true, \r\n                        toLinkableDuplicates: true,\r\n                        cursor: \"pointer\",\r\n                        fill: \"rgba(255,255,255,0)\",\r\n                        stroke: \"rgba(255,255,255,0)\"\r\n                    }),\r\n                    $$(go.TextBlock,\r\n                        {\r\n                            font: \"bold 12px sans-serif\",\r\n                            stroke: '#333',\r\n                            margin: 6,  // make some extra space for the shape around the text\r\n                            isMultiline: true,  // don't allow newlines in text\r\n                            editable: true\r\n                        },  // some room around the text\r\n                        // TextBlock.text is bound to Node.data.key\r\n                        new go.Binding(\"text\", \"text\").makeTwoWay()\r\n                    )\r\n            );\r\n\r\n            normalLinkTemplate = \r\n                $$(go.Link,\r\n                    { \r\n                        toShortLength: 3, \r\n                        relinkableFrom: true, \r\n                        relinkableTo: true,\r\n                        curve: go.Link.Bezier,\r\n                        reshapable: true\r\n                    },  // allow the user to relink existing links\r\n                    new go.Binding(\"points\").makeTwoWay(),\r\n                    $$(go.Shape,\r\n                        {\r\n                            strokeWidth: 1 \r\n                        },\r\n                        new go.Binding(\"stroke\", \"color\").makeTwoWay()\r\n                    ),\r\n                    $$(go.Shape,\r\n                        { \r\n                            toArrow: \"Standard\",\r\n                            stroke: null\r\n                        },\r\n                        new go.Binding(\"stroke\", \"color\").makeTwoWay(),\r\n                        new go.Binding(\"fill\", \"color\").makeTwoWay(),\r\n                )\r\n            );\r\n\r\n            orLinkTemplate = \r\n                $$(go.Link,\r\n                    { \r\n                        toShortLength: 3, \r\n                        relinkableFrom: true, \r\n                        relinkableTo: true,\r\n                        curve: go.Link.Bezier,\r\n                        reshapable: true\r\n                    },  // allow the user to relink existing links\r\n                    new go.Binding(\"points\").makeTwoWay(),\r\n                    $$(go.Shape,\r\n                        {\r\n                            strokeWidth: 1 \r\n                        },\r\n                        new go.Binding(\"stroke\", \"color\").makeTwoWay()\r\n                    ),\r\n                    $$(go.Shape,\r\n                        {\r\n                            toArrow: \"Standard\",\r\n                            stroke: null\r\n                        },\r\n                        new go.Binding(\"fill\", \"color\").makeTwoWay()\r\n                    ),\r\n                    $$(go.Shape,\r\n                        {\r\n                            strokeWidth: 1, \r\n                            fromArrow: \"BackwardSemiCircle\" \r\n                        },\r\n                        new go.Binding(\"fill\", \"color\").makeTwoWay()\r\n                    )\r\n                );\r\n\r\n            mapTemplate =\r\n                $$(go.Group, \"Auto\",{},\r\n                    new go.Binding(\"isSubGraphExpanded\", \"expanded\").makeTwoWay(),\r\n                    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\r\n                    $$(go.Shape, \"RoundedRectangle\",\r\n                        {\r\n                            strokeWidth: 1,\r\n                            portId: \"\", \r\n                            cursor: \"pointer\",\r\n                            fromLinkable: true, \r\n                            fromLinkableSelfNode: true, \r\n                            fromLinkableDuplicates: true,\r\n                            toLinkable: true, \r\n                            toLinkableSelfNode: true, \r\n                            toLinkableDuplicates: true \r\n                        },\r\n                        new go.Binding(\"fill\", \"isHighlighted\", function(h) { return h ? \"rgba(255,0,0,0.2)\" : $$(go.Brush, \"Linear\", { 0: \"rgba(224,234,252,0.5)\", 1: \"rgba(207,222,243,0.5)\" }); }).ofObject(),\r\n                    ),\r\n                    $$(go.Panel, \"Vertical\",\r\n                        { \r\n                            defaultAlignment: go.Spot.Center, \r\n                            margin: 6 \r\n                        },\r\n                        $$(go.Panel, \"Horizontal\",\r\n                            { \r\n                                defaultAlignment: go.Spot.Top\r\n                            },\r\n                            $$(\"SubGraphExpanderButton\"), // the SubGraphExpanderButton is a panel that functions as a button to expand or collapse the subGraph\r\n                            $$(go.TextBlock,\r\n                                {\r\n                                    font: \"bold 12px sans-serif\",\r\n                                    stroke: '#333',\r\n                                    margin: 4,  // make some extra space for the shape around the text\r\n                                    isMultiline: true,  // don't allow newlines in text\r\n                                    editable: true, \r\n                                    alignment: go.Spot.Center\r\n                                },\r\n                                new go.Binding(\"text\", \"text\").makeTwoWay())\r\n                        ),\r\n                        $$(go.Placeholder, // create a placeholder to represent the area where the contents of the group are\r\n                            { \r\n                                padding: new go.Margin(0, 5) \r\n                            }\r\n                        )\r\n                    )\r\n            );\r\n\r\n            myDiagram.nodeTemplateMap.add(\"concept\", conceptNodeTemplate);\r\n            myDiagram.nodeTemplateMap.add(\"relation\", relationNodeTemplate);\r\n            \r\n            myDiagram.linkTemplateMap.add(\"normal\", normalLinkTemplate);\r\n            myDiagram.linkTemplateMap.add(\"or\", orLinkTemplate);\r\n            \r\n            myDiagram.groupTemplateMap.add(\"map\", mapTemplate);\r\n    }\r\n\r\n    edit(n) {\r\n        this.versionService.setCurrentLoadVersion(this.versionList[n]);\r\n        this.router.navigate(['edit', 'cmap']);\r\n    }\r\n    next() {\r\n        this.count++;\r\n        this.count >= this.images.length ? this.count = 0 : {} ;\r\n    }\r\n    previus() {\r\n        this.count--;\r\n        this.count < 0 ? this.count = this.images.length - 1 : {} ;\r\n    }\r\n    expand() {\r\n        this.expanded = !this.expanded\r\n        $('#metaInfo').toggleClass('col-md-12 col-md-6');\r\n        if(this.expanded){\r\n            setTimeout(function() {\r\n                $('#otherInfo').toggleClass('col-md-0 col-md-6');\r\n            }, 500); \r\n        }else{\r\n            $('#otherInfo').toggleClass('col-md-0 col-md-6');\r\n        }\r\n          \r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../app.module';\r\nimport { ViewRoutes } from './view.routing';\r\nimport { NouisliderModule } from 'ng2-nouislider';\r\nimport { TagInputModule } from 'ngx-chips';\r\nimport { ViewMapComponent } from './map/viewmap.component';\r\nimport { ViewMapVersionsComponent } from './map/versions/viewmapversions.component';\r\nimport { ComponentsModule } from '../components/components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ViewRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NouisliderModule,\r\n    TagInputModule,\r\n    MaterialModule,\r\n    ComponentsModule\r\n  ],\r\n  declarations: [\r\n    ViewMapComponent,\r\n    ViewMapVersionsComponent\r\n  ]\r\n})\r\n\r\nexport class ViewModule {}\r\n","import { Routes } from '@angular/router';\r\nimport { ViewMapComponent } from './map/viewmap.component';\r\nimport { ViewMapVersionsComponent } from './map/versions/viewmapversions.component';\r\n\r\n\r\nexport const ViewRoutes: Routes = [\r\n    {\r\n      path: '',\r\n      redirectTo: '/view/map',\r\n      pathMatch: 'full'\r\n    },\r\n    {\r\n      path: '',\r\n      children: [{\r\n            path: 'map',\r\n            children:[\r\n              {\r\n                path:'',\r\n                component: ViewMapComponent\r\n              },\r\n              {\r\n                path: 'versions',\r\n                component: ViewMapVersionsComponent\r\n              }\r\n            ]\r\n        }\r\n      ]\r\n    }\r\n];\r\n"],"sourceRoot":""}